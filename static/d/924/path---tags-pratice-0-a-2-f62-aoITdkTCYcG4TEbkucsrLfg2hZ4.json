{"pageContext":{"posts":{"gatsbyjs":[{"excerpt":"Install Prism Plugin Prism is a nice library to hightlight your code, it can be used for parsing markdown. Gatsby JS comes with a well integrated  plugin . Follow the instruction then you can render code snippets in a nice looking way.","html":"<h1>Install Prism Plugin</h1>\n<p>Prism is a nice library to hightlight your code, it can be used for parsing markdown. Gatsby JS comes with a well integrated <a href=\"https://www.gatsbyjs.org/packages/gatsby-remark-prismjs/?=\">plugin</a>. Follow the instruction then you can render code snippets in a nice looking way.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// In your gatsby-config.js</span>\nplugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    resolve<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`gatsby-transformer-remark`</span></span><span class=\"token punctuation\">,</span>\n    options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token template-string\"><span class=\"token string\">`gatsby-remark-prismjs`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code></pre>\n      </div>","id":"3caaa5e3-3daa-5787-848f-fba679736a7f","timeToRead":1,"frontmatter":{"date":"2018-08-23T12:02:03.913Z","path":"/install-prism-plugin","tags":["gatsbyjs","prismjs"],"title":"Install Prism Plugin"}}],"prismjs":[{"excerpt":"Install Prism Plugin Prism is a nice library to hightlight your code, it can be used for parsing markdown. Gatsby JS comes with a well integrated  plugin . Follow the instruction then you can render code snippets in a nice looking way.","html":"<h1>Install Prism Plugin</h1>\n<p>Prism is a nice library to hightlight your code, it can be used for parsing markdown. Gatsby JS comes with a well integrated <a href=\"https://www.gatsbyjs.org/packages/gatsby-remark-prismjs/?=\">plugin</a>. Follow the instruction then you can render code snippets in a nice looking way.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// In your gatsby-config.js</span>\nplugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    resolve<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`gatsby-transformer-remark`</span></span><span class=\"token punctuation\">,</span>\n    options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token template-string\"><span class=\"token string\">`gatsby-remark-prismjs`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code></pre>\n      </div>","id":"3caaa5e3-3daa-5787-848f-fba679736a7f","timeToRead":1,"frontmatter":{"date":"2018-08-23T12:02:03.913Z","path":"/install-prism-plugin","tags":["gatsbyjs","prismjs"],"title":"Install Prism Plugin"}}],"dry":[{"excerpt":"Feature Toggle And Regression It is OK to violate DRY principls to copy the code when working on a new feature that is high couple to old behaviour. As a professional software engineer, I kind of strickly obey the DRY principals, and don't want to…","html":"<h1>Feature Toggle And Regression</h1>\n<p>It is OK to violate DRY principls to copy the code when working on a new feature that is high couple to old behaviour.</p>\n<p>As a professional software engineer, I kind of strickly obey the DRY principals, and don't want to introduce any regression. This ends up you can not easily to write a clean code and refacotr. You need to branch your code in the exisitng code base. </p>\n<p>Copy the exisitng code will ease your regresion nightmare. Once toggle is removed, the old code will disappear, so you are not violating DRY prinsipal any more. But you need to make sure the toggle will be removed and old behaviour will not needed. Otherwise, you could put yourself in a situation that DRY try to address, maintain multiple codes that basically indentical.</p>","id":"a6ffd3ea-158f-5901-9195-a5e8e85f91cd","timeToRead":1,"frontmatter":{"date":"2018-08-09T21:12:26.441Z","path":"/feature-toggle-and-regression","tags":["dry","feature-toogle","regression"],"title":"Feature Toggle And Regression"}}],"feature-toogle":[{"excerpt":"Feature Toggle And Regression It is OK to violate DRY principls to copy the code when working on a new feature that is high couple to old behaviour. As a professional software engineer, I kind of strickly obey the DRY principals, and don't want to…","html":"<h1>Feature Toggle And Regression</h1>\n<p>It is OK to violate DRY principls to copy the code when working on a new feature that is high couple to old behaviour.</p>\n<p>As a professional software engineer, I kind of strickly obey the DRY principals, and don't want to introduce any regression. This ends up you can not easily to write a clean code and refacotr. You need to branch your code in the exisitng code base. </p>\n<p>Copy the exisitng code will ease your regresion nightmare. Once toggle is removed, the old code will disappear, so you are not violating DRY prinsipal any more. But you need to make sure the toggle will be removed and old behaviour will not needed. Otherwise, you could put yourself in a situation that DRY try to address, maintain multiple codes that basically indentical.</p>","id":"a6ffd3ea-158f-5901-9195-a5e8e85f91cd","timeToRead":1,"frontmatter":{"date":"2018-08-09T21:12:26.441Z","path":"/feature-toggle-and-regression","tags":["dry","feature-toogle","regression"],"title":"Feature Toggle And Regression"}}],"regression":[{"excerpt":"Feature Toggle And Regression It is OK to violate DRY principls to copy the code when working on a new feature that is high couple to old behaviour. As a professional software engineer, I kind of strickly obey the DRY principals, and don't want to…","html":"<h1>Feature Toggle And Regression</h1>\n<p>It is OK to violate DRY principls to copy the code when working on a new feature that is high couple to old behaviour.</p>\n<p>As a professional software engineer, I kind of strickly obey the DRY principals, and don't want to introduce any regression. This ends up you can not easily to write a clean code and refacotr. You need to branch your code in the exisitng code base. </p>\n<p>Copy the exisitng code will ease your regresion nightmare. Once toggle is removed, the old code will disappear, so you are not violating DRY prinsipal any more. But you need to make sure the toggle will be removed and old behaviour will not needed. Otherwise, you could put yourself in a situation that DRY try to address, maintain multiple codes that basically indentical.</p>","id":"a6ffd3ea-158f-5901-9195-a5e8e85f91cd","timeToRead":1,"frontmatter":{"date":"2018-08-09T21:12:26.441Z","path":"/feature-toggle-and-regression","tags":["dry","feature-toogle","regression"],"title":"Feature Toggle And Regression"}}],"pratice":[{"excerpt":"Looking At The Root Problem Example, the translation fallback logic in the code. Using the webpack plugin only took me few hours. But the on going cost of adding and removing fallback logic is uncountable. Shell service gave us some crapy API, and we…","html":"<h1>Looking At The Root Problem</h1>\n<p>Example, the translation fallback logic in the code. Using the webpack plugin only took me few hours. But the on going cost of adding and removing fallback logic is uncountable.</p>\n<p>Shell service gave us some crapy API, and we keep hitting some issue that is not quite relavent but we have to cope with it. This should be address and fixed at the source level.</p>","id":"8ce038d2-ed07-51a7-a98d-7ffcf5a693b1","timeToRead":1,"frontmatter":{"date":"2018-08-09T06:34:51.232Z","path":"/looking-at-the-root-problem","tags":["pratice"],"title":"Looking At The Root Problem"}}],"productivity":[{"excerpt":"Thoughts About Productivity Distrative Spot any steps in thw workflow that could easily distract from your work. For example, a developer might occarually run an end to end test. This e2e srcipts need few steps to complete.  install dependencies…","html":"<h1>Thoughts About Productivity</h1>\n<h2>Distrative</h2>\n<p>Spot any steps in thw workflow that could easily distract from your work. For example, a developer might occarually run an end to end test. This e2e srcipts need few steps to complete. </p>\n<ol>\n<li>install dependencies</li>\n<li>update webdriver</li>\n<li>start webdriver</li>\n<li>run the test scripts\nThe steps might look simple and easy to follow. But to an ordanary developer like myself, can only vaguely remember how to do this few weeks later. So what ends up is, I alwasy need to check the README or whatever that document the process. This is a distraction. A distraction will end up lots of mental cost, including context switching.\nA developer might developing a feature and just want to know wheather his code will pass the e2e tests, but now he has forced to switch context to learn how to run the tests again.\nIf these steps can be run in a single command, like <code class=\"language-text\">npm run e2e-test</code>, then it is a way better improvement in terms of distraction. A single command is way easy to remember than a sequnce of commands.</li>\n</ol>\n<p>Scripting all simple process if possible.</p>","id":"67c76856-a404-5e4e-9040-23878818d6fc","timeToRead":1,"frontmatter":{"date":"2018-08-08T22:38:22.164Z","path":"/thoughts-about-productivity","tags":["productivity"],"title":"Thoughts About Productivity"}}],"mermaid":[{"excerpt":"I really like the idea to embed a chart in the makedown with a very simple and readable syntax. And gatsby already have a plugin for it.  gatsby-remark-graph This is a test chart with mermaid plugin.","html":"<p>I really like the idea to embed a chart in the makedown with a very simple and readable syntax. And gatsby already have a plugin for it. <a href=\"https://www.gatsbyjs.org/packages/gatsby-remark-graph/\">gatsby-remark-graph</a></p>\n<p>This is a test chart with mermaid plugin.</p>\n<div class=\"mermaid\">graph LR\n    A[Start] -- Links To --> B((Circle))\n    A --> C(Round Rect)\n    B --> D{End}\n    C --> D</div>\n<div class=\"mermaid\">graph LR\n    A((Agile)) --> TDD[Test Driven Development]\n    A --> CI[Continuous Integration]\n    A --> CD[Continuous Delivery]</div>","id":"31469f39-1b2a-5d71-9c41-b1a392592afc","timeToRead":1,"frontmatter":{"date":"2018-08-06T23:53:19.791Z","path":"/hello-mermaid","tags":["mermaid"],"title":"Hello Mermaid"}}],"blog":[{"excerpt":"Writing things down is always a good thing. Especially when you are solving a difficult problem. You need to analyze the problem, and digest your solution then come up with something. This is why I want to reboot this blog.","html":"<p>Writing things down is always a good thing. Especially when you are solving a difficult problem. You need to analyze the problem, and digest your solution then come up with something. This is why I want to reboot this blog.</p>","id":"211296dd-4ec8-597c-b518-31aea5ecdd3a","timeToRead":1,"frontmatter":{"date":"2018-08-06T09:17:16.525Z","path":"/reboot/","tags":["blog"],"title":"Blog Reboot"}}],"tools":[{"excerpt":"Manage your bookmark cross different browsers I was a heavy google chrome user, but since I a little bit scared about their privacy policy. I was seeking for alternative, turns of Opera is my first choose. The first problem I hit strait away is…","html":"<h1>Manage your bookmark cross different browsers</h1>\n<p>I was a heavy google chrome user, but since I a little bit scared about their privacy policy. I was seeking for alternative, turns of Opera is my first choose. The first problem I hit strait away is bookmarks, the more I use a browser the more I addict to it. All my collections of bookmarks need to migrate, is there a proper solutions for this? It depends. But I find a website that change the way I manage my bookmarks in a nice looking UI, and it's pretty easy to use. That is <a href=\"https://start.me\">start.me</a>.</p>\n<p><img src=\"./start-me.png\" alt=\"Start me screen shot\"></p>\n<p>The first thing you will notice is Start.Me is pretty much looks like a portal, things like iGoogle. The functionality is similar too. You can add tabs to organize your things. Widgets are also available to use, such like weather or todo list.</p>\n<p>The only thing I was interested is bookmark manager. It allows you to login using google account and access it cross all your devices. Yes, it's responsive. So not just your desktop browsers, but also on your mobile. This is way I would like to keep my bookmarks in one place and cross all browsers.</p>\n<p>Of course, you would still have privacy concerns here. But this is how I made my decision, I don't like one service controls all my data.</p>","id":"fa2b8a2d-e225-50ae-9b84-38f2e78801a7","timeToRead":1,"frontmatter":{"date":"2017-05-22","path":"/start-me/","tags":["tools","bookmark"],"title":"Manage your bookmark cross different browsers"}}],"bookmark":[{"excerpt":"Manage your bookmark cross different browsers I was a heavy google chrome user, but since I a little bit scared about their privacy policy. I was seeking for alternative, turns of Opera is my first choose. The first problem I hit strait away is…","html":"<h1>Manage your bookmark cross different browsers</h1>\n<p>I was a heavy google chrome user, but since I a little bit scared about their privacy policy. I was seeking for alternative, turns of Opera is my first choose. The first problem I hit strait away is bookmarks, the more I use a browser the more I addict to it. All my collections of bookmarks need to migrate, is there a proper solutions for this? It depends. But I find a website that change the way I manage my bookmarks in a nice looking UI, and it's pretty easy to use. That is <a href=\"https://start.me\">start.me</a>.</p>\n<p><img src=\"./start-me.png\" alt=\"Start me screen shot\"></p>\n<p>The first thing you will notice is Start.Me is pretty much looks like a portal, things like iGoogle. The functionality is similar too. You can add tabs to organize your things. Widgets are also available to use, such like weather or todo list.</p>\n<p>The only thing I was interested is bookmark manager. It allows you to login using google account and access it cross all your devices. Yes, it's responsive. So not just your desktop browsers, but also on your mobile. This is way I would like to keep my bookmarks in one place and cross all browsers.</p>\n<p>Of course, you would still have privacy concerns here. But this is how I made my decision, I don't like one service controls all my data.</p>","id":"fa2b8a2d-e225-50ae-9b84-38f2e78801a7","timeToRead":1,"frontmatter":{"date":"2017-05-22","path":"/start-me/","tags":["tools","bookmark"],"title":"Manage your bookmark cross different browsers"}}]},"post":[{"excerpt":"Looking At The Root Problem Example, the translation fallback logic in the code. Using the webpack plugin only took me few hours. But the on going cost of adding and removing fallback logic is uncountable. Shell service gave us some crapy API, and we…","html":"<h1>Looking At The Root Problem</h1>\n<p>Example, the translation fallback logic in the code. Using the webpack plugin only took me few hours. But the on going cost of adding and removing fallback logic is uncountable.</p>\n<p>Shell service gave us some crapy API, and we keep hitting some issue that is not quite relavent but we have to cope with it. This should be address and fixed at the source level.</p>","id":"8ce038d2-ed07-51a7-a98d-7ffcf5a693b1","timeToRead":1,"frontmatter":{"date":"2018-08-09T06:34:51.232Z","path":"/looking-at-the-root-problem","tags":["pratice"],"title":"Looking At The Root Problem"}}],"tag":"pratice"}}